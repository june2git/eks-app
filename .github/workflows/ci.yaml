# 워크플로우 이름: GitHub Actions UI에 표시되는 이름
name: App CI (Reusable)

# 워크플로우 트리거 조건: 언제 이 워크플로우가 실행될지 정의
on:
  # Push 이벤트 트리거
  push:
    branches: [ main ]  # main 브랜치에 push될 때만 실행
    paths:              # 특정 경로의 파일이 변경될 때만 실행 (효율성)
      - 'demo/**'                    # demo 폴더 내 파일 변경 시
      - '.github/workflows/**'       # 워크플로우 파일 자체가 변경될 때
  
  # Pull Request 이벤트 트리거
  pull_request:
    branches: [ main ]  # main 브랜치로의 PR 생성/업데이트 시
    paths:              # PR에서 변경된 파일이 아래 경로에 있을 때만 실행
      - 'demo/**'       # demo 폴더 내 파일이 변경된 PR

# 권한 설정: 이 워크플로우가 GitHub 및 AWS에서 가질 수 있는 권한
permissions:
  contents: read      # 저장소 내용 읽기 권한 (코드 체크아웃)
  id-token: write     # OIDC 토큰 발급 권한 (AWS IAM 역할 assume에 필요)

# 실행할 Job 정의
jobs:
  ci:
    # Reusable Workflow 호출: 공통 빌드/배포 로직을 재사용
    # devops-templates 저장소의 build_and_push_template.yml을 호출
    uses: june2git/devops-templates/.github/workflows/build_and_push_template.yml@main
    
    # Secrets 전달: Reusable Workflow에서 필요한 민감한 정보
    secrets:
      # GitOps 저장소 접근용 Personal Access Token
      # GitHub Secrets에 저장된 GITOPS_PAT을 전달
      GITOPS_PAT: ${{ secrets.GITOPS_PAT }}
    
    # 입력 매개변수: Reusable Workflow에 전달할 설정값들
    with:
      # 애플리케이션 이름 (이미지 태그에 사용됨: demo-main-123)
      app_name: demo
      # 빌드 시스템 타입 (gradle/maven/node 중 선택)
      build_system: gradle
      # Dockerfile 경로 (애플리케이션 루트 기준)
      dockerfile: demo/Dockerfile
      # Docker 빌드 컨텍스트 경로 (빌드에 포함될 파일들의 루트 디렉토리)
      context: demo
      # ECR 저장소 이름 (AWS ECR에 생성된 저장소)
      ecr_repo: demo-app
      # AWS 리전 (ECR 및 기타 AWS 리소스가 위치한 리전)
      aws_region: ap-northeast-2
      # GitOps 저장소 경로 (이미지 태그를 자동 업데이트할 저장소)
      gitops_repo: june2git/gitops
      # GitOps values 파일 경로 (이미지 태그가 저장된 Helm values 파일)
      values_file: charts/values-prod.yaml
